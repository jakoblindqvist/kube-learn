from sklearn import tree


data = [
    [ 0.2745, 0.301833333333, 1.12233333333, 1.14716666667, 0.746, 0.293, 0.195166666667, 0.205666666667, 0.225666666667, 0.187666666667, 0.2215, 0.188333333333, 0.1755, 0.263, 0.236166666667, 0.267166666667, 0.1865, 0.179666666667, 0.279833333333, 0.283666666667, 0.306166666667, 0.227166666667, 0.222833333333, 0.228666666667, 0.232, 0.574, 0.320166666667, 0.366833333333, 0.465166666667, 0.412666666667, 0.336666666667, 0.231166666667, 0.226333333333, 0.305666666667, 0.242166666667, 0.2915, 0.380166666667, 0.201833333333, 0.2405, 0.192166666667, 0.278, ],
    [ 0.262166666667, 0.252, 0.2645, 0.239666666667, 0.262166666667, 0.285666666667, 0.206, 0.214166666667, 0.201833333333, 0.192333333333, 0.1745, 0.178, 0.177, 0.216666666667, 0.213833333333, 0.254262295082, 0.19593220339, 0.191, 0.176666666667, 0.237833333333, 0.181147540984, 0.177796610169, 0.176333333333, 0.191639344262, 0.213389830508, 0.8055, 0.981833333333, 1.46852459016, 1.4106779661, 1.55770491803, 1.27525423729, 0.503, 0.349, 0.480166666667, 0.351333333333, 0.328333333333, 0.5885, 0.2215, 0.150833333333, 0.173666666667, 0.171666666667, ]
]
X = []
Y = []

for i, value in enumerate(data[0]):
    if value > 0.5 or data[1][i] > 0.5:
        Y.append(1)
    else:
        Y.append(0)

    X.append([value, data[0][i]])

clf = tree.DecisionTreeClassifier()
clf = clf.fit(X, Y)

print clf.predict([[0.1, 0.1], [0.7, 0.1], [0.1, 0.7], [0.7, 0.7]])

import graphviz
dot_data = tree.export_graphviz(clf, out_file=None)
graph = graphviz.Source(dot_data)
#graph.render("iris")
dot_data = tree.export_graphviz(clf, out_file=None,
                         feature_names=["First", "Second"],
                         class_names=["one", "two"],
                         filled=True, rounded=True,
                         special_characters=True)
graph = graphviz.Source(dot_data)
#graph.render()
#graph.view()